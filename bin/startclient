#!/bin/bash

USAGE="Usage: $(basename $0) [-help] [-Xms <mem_min>] [-Xmx <mem_max>] \
[-cp <classpath>] [-host <client_ip>] [-client <classname>] [-i <client_id>] \
[-b <broker_uri>] [-cli] [-web] [-c <config_file>] [OPTIONS]..."

# function to check whether a parameter is given to an option
check_arg_missing()
{
    if ( [[ $2 == -* ]] || [ -z $2 ] ); then
	echo "Option $1 requires a parameter"
	echo $USAGE
	exit 1
    fi
}

# check and set the PADRES_HOME environment value
if [ -z "$PADRES_HOME" ]
then
    #PADRES_HOME="$(cd $(dirname "$0")/.. && pwd)"
    PADRES_HOME=$(dirname $(dirname $(readlink -f $0)/))
    export PADRES_HOME
fi

# if the JAVA_HOME is not set, set to the home directory of the jvm
if [ -z $JAVA_HOME ]
then
    # jvm is in $JAVA_HOME/jre/bin/; therefore three 'dirname'
    JAVA_HOME=$(dirname $(dirname $(dirname $(readlink -f '/usr/bin/java'))))
fi

# get the command line arguments
ARGS=$*

# path separater for java class path values
PATHSEP=':'

# adjust for cygwin
case "`uname`" in
    (CYGWIN*) 
    PADRES_HOME="$(cygpath -m "$PADRES_HOME")"
    PATHSEP='\\;'
    ;;
esac

# default values
MEMORY_MIN=16  
MEMORY_MAX=64 
CLIENT="ca.utoronto.msrg.padres.tools.guiclient.GUIClient"
CLIENT_PATH=""
CLIENT_ID=""
CLIENT_IP=""
BROKER_URI=""
BG_PROCESS="&"

CLIENT_OPT=()

# Parse command line arguments
while [ $# -gt 0 ]; do
    case "$1" in
	( -Xms )
	   check_arg_missing $1 $2;
	   MEMORY_MIN=$2; 
	   shift 2 ;;
	( -Xmx )
	   check_arg_missing $1 $2
	   MEMORY_MAX=$2; 
	   shift 2 ;;
	( -cp )
	   check_arg_missing $1 $2
	   CLIENT_PATH=$2
	   shift 2 ;;
	( -host )
	   check_arg_missing $1 $2
	   CLIENT_IP=$2; 
	   shift 2 ;;
	( -client )
	   check_arg_missing $1 $2
	   CLIENT=$2; 
	   shift 2 ;;
	( -help )
	   cat ${PADRES_HOME}/bin/docs/startclient.help; 
	   exit 0;;
	( -cli )
	   CLIENT="ca.utoronto.msrg.padres.tools.cliclient.CLIClient"
	   BG_PROCESS=""
	   shift 1;;
	( -web )
	   CLIENT="ca.utoronto.msrg.padres.tools.webclient.WebClient"
	   shift 1;;
	( -i )
	   check_arg_missing $1 $2
	   CLIENT_OPT=( "${CLIENT_OPT[@]}" $1 $2)
	   CLIENT_ID=$2; 
	   shift 2 ;;
	( -b )
	   check_arg_missing $1 $2
	   CLIENT_OPT=( "${CLIENT_OPT[@]}" $1 $2)
	   BROKER_URI=$2; 
	   shift 2 ;;
	( * )
	   CLIENT_OPT=( "${CLIENT_OPT[@]}" $1)
	   shift 1 ;;
    esac
done

# check whether the client ID is given; if not, exit
if [ -z $CLIENT_ID ]; then
    echo "Please specify the client id";
    echo $USAGE
    exit 1
fi

CLASSPATH="${PADRES_HOME}/build/${PATHSEP}${CLIENT_PATH}"
for LIB in `ls ${PADRES_HOME}/lib/*.jar`
do
	CLASSPATH="${CLASSPATH}${PATHSEP}${LIB}"
done

JVM_ARGS="-Xms${MEMORY_MIN}m -Xmx${MEMORY_MAX}m -cp ${CLASSPATH}\
     -Djava.security.policy=${PADRES_HOME}/etc/java.policy"

if [ ! -z $CLIENT_IP ]; then
    JVM_ARGS="$JVM_ARGS -Djava.rmi.server.hostname=$CLIENT_IP"
fi

# start the client
CMD="java $JVM_ARGS $CLIENT ${CLIENT_OPT[@]}"

if [ -z $BG_PROCESS ]; then
	$CMD
else
	$CMD &
fi
