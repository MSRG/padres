# Configuration file for PANDA (Deployer)

# Working directory.  Dir must end with "/"
panda.workdir=~/.padres/panda/

# Location of help file for deployer
panda.helpFile=$PADRES_HOME/etc/panda/consoleHelp.txt

# Time-out for phase-I of deployment (in seconds)
deployer.phase1.timeout=60
deployer.phase1.retries=10
deployer.phase1.discovery.timer=18

# This controls whether you want to use a fixed port for the Phase 1 monitoring
# client.  Use -1 for a randomly chosen port.  Use any number between 0 and 65535
# for a fixed port.  You may want to use a fixed port when doing ssh tunneling.
deployer.phase1monitoringclient.port=12121

# Directory where build directory resides on deployed machine.  Dir must end with "/"
# This is also used as an environment variable for invoking scripts that, for 
# example, get logs or delete logs in the build directory
# NOTE: This is a relative path to the remote machines home's directory
remote.padres.path=padres/

# Location of shell scripts in deployed machines.  Dir must end with "/"
scripts.local.path=$PADRES_HOME/bin/panda/

# Environment variables used by scripts when they execute.
# You can specify absolute path for the private key
# This eliminates the use of the nixesrc file.
# The last uppercase segment of each key is used as the name of the environment variable
scripts.env.IDENTITY=~/.ssh/authorized_keys2
scripts.env.SLICE=your_login
scripts.env.SETUP=http://www.msrg.utoronto.ca/planetlab/setup/setup
scripts.env.TARBALL=http://www.msrg.utoronto.ca/planetlab/padres.tar.gz

# Execution commands.  Scroll to the right ... its a long one ;)
command.process.add=screen -d -m bash -c 'source javahome && sleep <TIME> && cd <REMOTE_PADRES_PATH>/build && cp ../<START_PROCESS_SCRIPT> <RENAMED_START_PROCESS_SCRIPT> && screen -d -m env PADRES_HOME=${HOME}/<REMOTE_PADRES_PATH> PANDA=ON ./<RENAMED_START_PROCESS_SCRIPT> <PROGRAM_ARGS> && sleep 1.0 && rm -f <RENAMED_START_PROCESS_SCRIPT>'
command.process.remove=screen -d -m bash -c 'sleep <TIME> && pkill -15 <PROCESS_NAME_TO_KILL>'
command.all.remove=screen -d -m bash -c 'sleep <TIME> && pkill -15 java && pkill -15 screen && pkill -15 rmiregistry"'
